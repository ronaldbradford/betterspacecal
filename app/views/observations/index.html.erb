<div id="ledgend" class="container">
  <div class="inner cf">
    <div id="filterdata" class="btn fl">Optional Filters</div>
    <span class="fl">Activate Satellites (click to disable):</span>
    <ul class="legend fl">
      <li><a href="#filter" class="xmm-newton">XMM-Newton</a></li>
      <li><a href="#filter" class="fermi">Fermi</a></li>
      <li><a href="#filter" class="agile">AGILE</a></li>
      <li><a href="#filter" class="chandra">Chandra</a></li>
      <li><a href="#filter" class="integral">INTEGRAL</a></li>
      <li><a href="#filter" class="nustar">NuStar</a></li>
      <li><a href="#filter" class="rxte">RXTE</a></li>
      <li><a href="#filter" class="suzaku">Suzaku</a></li>
      <li><a href="#filter" class="swift">Swift</a></li>
      <li><a href="#filter" class="herschel">Herschel</a></li>
      <li><a href="#filter" class="spitzer">Spitzer</a></li>
      <li><a href="#filter" class="hubble">Hubble</a></li>
    </ul>
  </div>
</div>

<div class="container filters">
  <div class="inner cf">
    <%= form_tag :class => "cf" do %>
      <div class="inputContainer">
        <%= label_tag(:target, "Target:") %>
        <%= text_field_tag(:target) %>
      </div>
      <div class="inputContainer">
        <%= label_tag(:start, "Start:") %>
        <%= tag(:input, type: 'date', id: 'start', name: 'start', value: 1.week.ago.to_date) %>
      </div>
      <div class="inputContainer">
        <%= label_tag(:end, "End:") %>
        <%= tag(:input, type: 'date', id: 'end', name: 'end', value: 1.week.from_now.to_date) %>
      </div>
      <div class="inputContainer">
        <%= submit_tag("Filter", :id => "filter") %>
      </div>
    <% end %>
  </div>
</div>

<div class="container skymap">
  <div class="inner"></div>
  <div id="coordinates">
    <span id="l_coord"></span>
    <span id="b_coord"></span>
  </div>
</div>

<script id="modal-template" type="text/x-handlebars-template">
  <h2>{{target}}</h2>
  {{#if images}}
    <a href="{{nedUrl}}" target="_blank"><img src="{{firstImage}}" alt="detailed image"></a>
  {{/if}}
  <div><strong>Source</strong> {{source}}</div>
  <div><strong>Start</strong> {{formatTime start}}</div>
  <div><strong>End</strong> {{formatTime end}}</div>
  <div><strong>RA:</strong> {{ra_str}}</div>
  <div><strong>Dec:</strong> {{dec_str}}</div>
  <button class="closeButton cf">Close</button>
</script>

<div class="container">
  <div class="inner">
    <h3 style="margin: 20px 0 10px 0;">Calendar Range</h3>
    <div id="tl" style="height: 400px; border: 1px solid #aaa;"></div>
    <noscript>
      This page uses Javascript to show you a Timeline. Please enable Javascript in your browser to see the
      full page. Thank you.
    </noscript>
  </div>
</div>


<div id="faq" class="container">
  <div class="inner cf">
    <div class="content fl">
      <h1>Frequently Asked Questions</h1>
      <h4>What am I looking at?</h4>
      <p>When you select a date range and click Filter the map will populate with dots, and the calendar will fill with observation schedules. Each dot is an object in our universe and the color coding indicates which telescope is looking at it. Click the dots to find out more about the object.</p>
    <h4>Where are these telescopes?</h4>
    <p>These telescopes are mounted on satellites orbiting the Earth. When you plot the objects that they are looking at you'll notice they look like a wave in the sky - this follows the orbital path of the satellite across our sky.</p>
    <h4>Why are there many telescopes?</h4>
    <p>Each telescope has different design specifications and is sensitive to different wavelengths. For example Fermi measures gamma rays - electromagnetic radiation with a frequency above 10<sup>19</sup>Hz. XMM-Newton looks at X-rays, with frequencies around 10 times lower. Objects in space look different at different frequencies - just as you can't see a person in a dark room with he naked eye, but they glow like a lightbulb to infra-red. So XMM-Newton is looking at the universe through X-ray specs.</p>
    <h4>What are they looking at?</h4>
    <p>Scientists around the world can reserve time on telescopes to look at objects they are interested in. This can range from a particular star, or a distant galaxy. Satellites can be re-targeted automatically to respond to a sudden event like a supernova. Click a target on the map above - if it's been observed before you'll see a picture. Click through to see more images of the same object.</p>
    <h4>What are RA and Dec, and l and b?</h4>
    <p>Astronomers use a range of different coordinate systems to identify objects in the sky. In the map at the top of the page the points are plotted using l and b, the <a href="http://en.wikipedia.org/wiki/Galactic_coordinate_system" target="_blank">galactic longitude and latitude</a>. As with longitude and latitude on earth, l and b define the x and y location on a map, and like earth there is a galactic equator. This is the plane of the galaxy - visible as the bright line of stars, and corresponds to b=0. All astronomical coordinates increase to the left.</p>
    <p><a href="http://en.wikipedia.org/wiki/Equatorial_coordinate_system" target="_blank">RA and Dec</a> refer to Right Ascension and Declination. Unlike l and b, these coordinates are defined with respect to earth - so Dec=0 corresponds to the projection of the earth's equator onto the sky, and Dec=90 is the direction of the earth's north pole.</p>
  </div>

    <div class="satinfo fl">
      <h3>Satellite Information</h3>
      <ul>
        <li><a href="http://xmm.esac.esa.int/" target="_blank">XMM-Newton</a></li>
        <li><a href="http://fermi.gsfc.nasa.gov/" target="_blank">Fermi</a></li>
        <li><a href="http://www.nustar.caltech.edu/" target="_blank">AGILE</a></li>
        <li><a href="http://chandra.harvard.edu/" target="_blank">Chandra</a></li>
        <li><a href="http://sci.esa.int/science-e/www/area/index.cfm?fareaid=21" target="_blank">INTEGRAL</a></li>
        <li><a href="http://www.nustar.caltech.edu/" target="_blank">NuStar</a></li>
        <li><a href="http://heasarc.gsfc.nasa.gov/docs/xte/learning_center/what_is_RXTE.html" target="_blank">RXTE</a></li>
        <li><a href="http://en.wikipedia.org/wiki/Suzaku_(satellite)" target="_blank">Suzaku</a></li>
        <li><a href="http://heasarc.gsfc.nasa.gov/docs/swift/" target="_blank">Swift</a></li>
        <li><a href="http://www.esa.int/Our_Activities/Space_Science/Herschel" target="_blank">Herschel</a></li>
        <li><a href="http://www.spitzer.caltech.edu/" target="_blank">Spitzer</a></li>
        <li><a href="http://hubblesite.org/" target="_blank">Hubble</a></li>
      </ul>
      </div>
  </div>
</div>



<div class="container">
  <footer>
    <div class="inner">
      <p>©2013. Created during the <a href="http://spaceappsnyc.com/" target="blank">Space Apps Challenge NYC</a>. Regarding questions or comments, feel free to <a href="mailto:contact@spacecalnyc.com">contact us</a>.</p>
    </div>
  </footer>
    <a href="#" class="go-top">↑</a>
</div>

<script>
    SimileAjax.History.enabled = false;


    var kvp = {
      'XMM-Newton':'#007ab9',
      'Fermi':'#a10974',
      'AGILE':'#7dcd0d',
      'Chandra':'#26a100',
      'INTEGRAL':'#dadd00',
      'NuSTAR':'#28ced4',
      'RXTE':' #ffb629',
      'Suzaku':'#df5400',
      'Swift':'#ff3838',
      'Herschel':'#2c41de;',
      'Spitzer':'#c700b7'
    }

    function transformJSON(data) {

        for(var evt in data){
            data[evt].start = new Date(data[evt].start);
            data[evt].end = new Date(data[evt].end);
            data[evt].title = data[evt].target;
            data[evt].description = (data[evt]._id.$oid) ? 'id' + data[evt]._id.$oid : data[evt]._id;
            data[evt].color = kvp[data[evt].source];
        }
        return {'events': data};
    }

    // Timeline and eventSource1
    var tl;
    var eventSource1;
    var _json;
    // Initialize timeline and load data from variable `timeline_data`
    function initTimeline(data) {

        var tl_el = document.getElementById("tl");
        eventSource1 = new Timeline.DefaultEventSource();

        var theme1 = Timeline.ClassicTheme.create();
        theme1.event.bubble.height = 220;
        theme1.autoWidth = true; // Set the Timeline's "width" automatically.
                                 // Set autoWidth on the Timeline's first band's theme,
                                 // will affect all bands.
        theme1.timeline_start = new Date(Date.UTC(1924, 0, 1));
        theme1.timeline_stop  = new Date(Date.UTC(2160, 0, 1));

        var d = Timeline.DateTime.parseGregorianDateTime("1900")
        var bandInfos = [
            Timeline.createBandInfo({
                width:          "80%",
                intervalUnit:   Timeline.DateTime.DAY,
                intervalPixels: 200,
                eventSource:    eventSource1
              //  theme:          theme
            }),
            Timeline.createBandInfo({
                width:          "20%",
                intervalUnit:   Timeline.DateTime.WEEK,
                intervalPixels: 200,
                eventSource:    eventSource1,
                overview:       true
               // theme:          theme
            })
        ];

        bandInfos[1].syncWith = 0;
        bandInfos[1].highlight = true;


        // create the Timeline
        tl = Timeline.create(tl_el, bandInfos, Timeline.HORIZONTAL);

        tl.getBand(0).setMinVisibleDate(Timeline.DateTime.parseGregorianDateTime(data[0].start));

        var url = '.'; // The base url for image, icon and background image
                       // references in the data
        data = transformJSON(data);
        eventSource1.loadJSON(data, url); // The data was stored into the
        _json = data;
        

        Timeline.OriginalEventPainter.prototype._showBubble = function(x, y, evt) {
          var id = evt.getDescription().toLowerCase().replace(/\|/g, '-').replace(/[ \/]/g, '');
          showModal(d3.select('#' + id).datum());
        }

        tl.layout(); // display the Timeline
    };

    function reloadTL(){               
      var filteredData = [];     

      for(var d in _json.events){
        var b = _json.events[d];        
        if ($('.'+b.source.toLowerCase()).hasClass('hidden')){
           continue;
         }
         if (b) filteredData.push(b);
      }   
      eventSource1.clear();
      eventSource1.loadJSON({'events': filteredData}, '.');

    }

    // Resizing from distribution example
    var resizeTimerID = null;
    function onResize() {
        if (resizeTimerID == null) {
            resizeTimerID = window.setTimeout(function() {
                resizeTimerID = null;
                tl.layout();
            }, 500);
        }
    }
 </script>
